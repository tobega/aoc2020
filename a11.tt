def input: [$IN::lines -> [$...]];

templates countOccupied
  @:0;
  $... ... -> #
  $@!
  <='#'> @: $@ + 1;
end countOccupied

templates modelSeating
  @:{changed:1};
  $ -> #
  when <?($@.changed <=changed´0>)> do $ -> countOccupied !
  otherwise
    @.changed: 0;
    def seating: $;
    $ -> \[i;j](
      when <?($i <..~1>)|?($i <$seating::length~..>)|?($j <..~1>)|?($j <$seating($i)::length~..>)> do
        $ !
      when <='L' ?($seating($i-1..$i+1; $j-1..$j+1) -> countOccupied <=0>)> do
        @modelSeating.changed: 1;
        '#'!
      when <='#' ?($seating($i-1..$i+1; $j-1..$j+1) -> countOccupied <5..>)> do
        @modelSeating.changed: 1;
        'L'!
      otherwise
        $!
    \) -> #
end modelSeating

//part1
$input -> modelSeating -> '$;
' -> !OUT::write

templates countVisibleOccupied&{in:}
  @:0;
  def pos: $;
  [{di: -1"1", dj: -1"1"},
    {di: -1"1", dj: 0"1"},
    {di: -1"1", dj: 1"1"},
    {di: 0"1", dj: 1"1"},
    {di: 1"1", dj: 1"1"},
    {di: 1"1", dj: 0"1"},
    {di: 1"1", dj: -1"1"},
    {di: 0"1", dj: -1"1"}]... -> {$..., i: $pos.i + $.di, j: $pos.j + $.dj} -> #
  $@!
  when <?($.i <..~1"1">)|?($.i <($in::length)"1"~..>)|?($.j <..~1"1">)|?($.j <($in($.i::raw)::length)"1"~..>)> do
    !VOID
  when <?($in($.i::raw; $.j::raw) <='L'>)> do
    !VOID
  when <?($in($.i::raw; $.j::raw) <='#'>)> do
    @: $@ + 1;
  otherwise
    {$..., i: $.i + $.di, j: $.j + $.dj} -> #
end countVisibleOccupied

templates modelSeating2
  @:{changed:1};
  $ -> #
  when <?($@.changed <=changed´0>)> do $ -> countOccupied !
  otherwise
    @.changed: 0;
    def seating: $;
    $ -> \[i;j](
      when <?($i <..~1>)|?($i <$seating::length~..>)|?($j <..~1>)|?($j <$seating($i)::length~..>)> do
        $ !
      when <='L' ?({i: ($i)"1", j: ($j)"1"} -> countVisibleOccupied&{in: $seating} <=0>)> do
        @modelSeating2.changed: 1;
        '#'!
      when <='#' ?({i: ($i)"1", j: ($j)"1"} -> countVisibleOccupied&{in: $seating} <5..>)> do
        @modelSeating2.changed: 1;
        'L'!
      otherwise
        $!
    \) -> #
end modelSeating2

//part2
$input -> modelSeating2 -> '$;
' -> !OUT::write
