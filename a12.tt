composer instruction
  {action: <'.'>, value: <INT>}
end instruction

def navigation: [$IN::lines -> instruction];

templates abs
  <..0> -$!
  <> $!
end abs

templates move
  @: {dx: 1, dy: 0, x: 0, y: 0};
  $...-> #
  ($@.x -> abs) + ($@.y -> abs) !
  when <{action: <='N'>}> do @.y: $@.y - $.value;
  when <{action: <='E'>}> do @.x: $@.x + $.value;
  when <{action: <='S'>}> do @.y: $@.y + $.value;
  when <{action: <='W'>}> do @.x: $@.x - $.value;
  when <{action: <='F'>}> do
    @.x: $@.x + $@.dx * $.value;
    @.y: $@.y + $@.dy * $.value;
  when <{action: <='R'>, value: <=90>}|{action: <='L'>, value: <=270>}>
    @: {dx: -$@.dy, dy: $@.dx, x: $@.x, y: $@.y};
  when <{action: <='R'|='L'>, value: <=180>}>
    @: {dx: -$@.dx, dy: -$@.dy, x: $@.x, y: $@.y};
  when <{action: <='R'>, value: <=270>}|{action: <='L'>, value: <=90>}>
    @: {dx: $@.dy, dy: -$@.dx, x: $@.x, y: $@.y};
  when <{action: <='R'|='L'>, value: <=360>}>
    !VOID
  otherwise
    'error $;' -> !OUT::write
end move

//part1
$navigation -> move -> '$;
' -> !OUT::write

templates waypoint
  @: {wx: 10, wy: -1, x: 0, y: 0};
  $...-> #
  ($@.x -> abs) + ($@.y -> abs) !
  when <{action: <='N'>}> do @.wy: $@.wy - $.value;
  when <{action: <='E'>}> do @.wx: $@.wx + $.value;
  when <{action: <='S'>}> do @.wy: $@.wy + $.value;
  when <{action: <='W'>}> do @.wx: $@.wx - $.value;
  when <{action: <='F'>}> do
    @.x: $@.x + $@.wx * $.value;
    @.y: $@.y + $@.wy * $.value;
  when <{action: <='R'>, value: <=90>}|{action: <='L'>, value: <=270>}>
    @: {wx: -$@.wy, wy: $@.wx, x: $@.x, y: $@.y};
  when <{action: <='R'|='L'>, value: <=180>}>
    @: {wx: -$@.wx, wy: -$@.wy, x: $@.x, y: $@.y};
  when <{action: <='R'>, value: <=270>}|{action: <='L'>, value: <=90>}>
    @: {wx: $@.wy, wy: -$@.wx, x: $@.x, y: $@.y};
  when <{action: <='R'|='L'>, value: <=360>}>
    !VOID
  otherwise
    'error $;' -> !OUT::write
end waypoint

//part2
$navigation -> waypoint -> '$;
' -> !OUT::write
