composer instruction
  {action: <'.'>, value: <INT> -> ($)"1"}
end instruction

def navigation: [$IN::lines -> instruction];

templates abs
  <..0> -$!
  <> $!
end abs

templates move&{waypoint:}
  @: $waypoint -> \(
    when <=1> do
      {dx: 10"1", dy: -1"1", x: 0"1", y: 0"1"}!
    otherwise
      {dx: 1"1", dy: 0"1", x: 0"1", y: 0"1"}!
  \);
  $...-> #
  ($@.x -> abs) + ($@.y -> abs) !
  
  when <{action: <='F'>}> do
    @.x: $@.x + $@.dx * $.value;
    @.y: $@.y + $@.dy * $.value;
  when <{action: <='R'>, value: <=90>}|{action: <='L'>, value: <=270>}>
    @: {dx: -$@.dy, dy: $@.dx, x: $@.x, y: $@.y};
  when <{action: <='R'|='L'>, value: <=180>}>
    @: {dx: -$@.dx, dy: -$@.dy, x: $@.x, y: $@.y};
  when <{action: <='R'>, value: <=270>}|{action: <='L'>, value: <=90>}>
    @: {dx: $@.dy, dy: -$@.dx, x: $@.x, y: $@.y};
  when <{action: <='R'|='L'>, value: <=360>}>
    !VOID

  when <{action: <='N'>}?($waypoint <=1>)> do @.dy: $@.dy - $.value;
  when <{action: <='E'>}?($waypoint <=1>)> do @.dx: $@.dx + $.value;
  when <{action: <='S'>}?($waypoint <=1>)> do @.dy: $@.dy + $.value;
  when <{action: <='W'>}?($waypoint <=1>)> do @.dx: $@.dx - $.value;

  when <{action: <='N'>}> do @.y: $@.y - $.value;
  when <{action: <='E'>}> do @.x: $@.x + $.value;
  when <{action: <='S'>}> do @.y: $@.y + $.value;
  when <{action: <='W'>}> do @.x: $@.x - $.value;

  otherwise
    'error $;' -> !OUT::write
end move

//part1
$navigation -> move&{waypoint: 0} -> '$;
' -> !OUT::write

//part2
$navigation -> move&{waypoint: 1} -> '$;
' -> !OUT::write
